## This is a sample GitLab CI/CD configuration file that should run without any modifications.
## It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
## it uses echo commands to simulate the pipeline execution.
##
## A pipeline is composed of independent jobs that run scripts, grouped into stages.
## Stages run in sequential order, but jobs within stages run in parallel.
##
## For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
##
## You can copy and paste this template into a new `.gitlab-ci.yml` file.
## You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
##
## To contribute improvements to CI/CD templates, please follow the Development guide at:
## https://docs.gitlab.com/ee/development/cicd/templates.html
## This specific template is located at:
## https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml
#
image: node:latest

stages:          # List of stages for jobs, and their order of execution
  - jslint
  - javascript
  - cssless

## Falls ein Befehl im Script fehlschlaegt, wird ein Fehler geworfen
## siehe http://redsymbol.net/articles/unofficial-bash-strict-mode/
before_script:
  - set -o pipefail

jslint-job:
  stage: jslint
  script:
    - npm run lint
  artifacts:
    paths:
      - /

javascript-job:       # This job runs in the build stage, which runs first.
  stage: javascript
  script:
    - echo 'Kombiniere Javascript...'
    - npm run combine:js && npm run min:js
  artifacts:
    paths:
      - /

css-less-job:   # This job runs in the test stage.
  stage: cssless    # It only starts when the job in the build stage completes successfully.
  script:
    - echo 'Kompiliere CSS-less'
    - npm run compile:less && npm run min:less
  artifacts:
    paths:
      - /

